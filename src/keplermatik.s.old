

********************************
* KEPLERMATIK                  *
* ===========                  *
* LOADS MAP.BMP FROM DISK TO   *
* $4000, THEN DE-INTERLEAVES   *
* ALTERNATE BYTES TO $2000 IN  *
* MAIN MEMORY AND AUX MEMORY   *
********************************


         ORG   $8000
********************************
* VARIABLES                    *
********************************
SCRATCH1 EQU   $08
SCRATCH2 EQU   $09
BELL     EQU   $FF3A    
CROUT    EQU   $FD8E
PRBYTE   EQU   $FDDA
MLI      EQU   $BF00
OPENCMD  EQU   $C8
READCMD  EQU   $CA
CLOSECMD EQU   $CC
GFXBASE  EQU   $2000
FILEBASE EQU   $4000
BMPSTART EQU   $FA
BMPSIZE  EQU   $FC
GFXPTR   EQU   $EB
*
MAIN     JSR   REMOVE
         JSR   OPEN
         BNE   ERROR
         JSR   READ
* BNE ERROR
* JSR CLOSE
         JSR   LDGFX1
         RTS
*
ERROR    JSR   PRBYTE
         JSR   BELL
         JSR   CROUT
         RTS
*
OPEN     JSR   MLI
         DFB   OPENCMD
         DW    PARAMS
         RTS
*
READ     LDA   PARAMS+5
         STA   PARAMS+1
         LDA   #4
         STA   PARAMS
         LDA   #<FILEBASE
         STA   PARAMS+2
         LDA   #>FILEBASE
         STA   PARAMS+3
         LDA   #00
         STA   PARAMS+4
         LDA   #$40
         STA   PARAMS+5
         LDA   #$AA
         STA   PARAMS+6
         LDA   #$AA
         STA   PARAMS+7
         JSR   MLI
         DFB   READCMD
         DW    PARAMS
         LDA   PARAMS+6
         STA   SCRATCH1
         LDA   PARAMS+7
         STA   SCRATCH2
         RTS
CLOSE    LDA   #1
         STA   PARAMS
         JSR   MLI
         DFB   READCMD
         DW    PARAMS
         RTS
*
LDGFX1   STA   $C000            ;80STORE OFF
         STA   $C002            ;RAMRD OFF
         STA   $C004            ;$RAMWRT OFF
         LDX   #$00             ;SET UP INCREMENTS TO 0
         LDY   #$0A             ;GET BITMAP OFFSET FROM FILE POSITION $000A
         LDA   #<GFXBASE
         STA   GFXPTR
         LDA   #>GFXBASE
         STA   GFXPTR+1
*
LDGFX2   LDA   FILEBASE,Y       ;CALCULATE START OF BMP AND STORE IN BMPSTART
         STA   SCRATCH1
         INY
         LDA   FILEBASE,Y
         STA   SCRATCH2
         CLC
         LDA   #<FILEBASE
         ADC   SCRATCH1
         STA   BMPSTART
         LDA   #>FILEBASE
         ADC   SCRATCH2
         STA   BMPSTART+1
*
LDGFX3   LDY   #$02             ;GET 4 BYTE BITMAP SIZE FROM FILE POSITION $0002
         LDA   FILEBASE,Y       ;STORE SIZE IN $FA THROUGH $FC
         STA   BMPSIZE
         INY
         LDA   FILEBASE,Y
         STA   BMPSIZE+1
         LDX   #$00
         LDY   #$00
         LDA   BMPSIZE
         ADC   BMPSTART         ; 16-BIT ADD BMPSIZE TO BMPSTART TO GET
         STA   BMPSIZE          ; EOF LOCATION.  EOF LOCATION NOW STORED
         LDA   BMPSIZE+1        ; IN BMPSIZE
         ADC   BMPSTART+1
         STA   BMPSIZE+1
********************************
* GET PAIRS OF BYTES AND       *
* DE-INTERLEAVE THEM BETWEEN   *
* MAIN AND AUX MEMORY          *
********************************

LDGFX4   LDA   (BMPSTART),Y     ; LOAD FIRST BYTE
         STA   SCRATCH1         ; STASH IT IN SCRATCH1
         TYA                    ; DIVIDE X BY 2
         LSR
         TAY
         LDA   SCRATCH1         ; GET FIRST BYTE BACK FROM SCRATCH1
         STA   (GFXPTR),Y       ; STORE IT IN MAIN MEMORY
         TYA                    ; MULTIPLY X BY 2
         ROL
         TAY
         INY
         STA   $C005            ; RAMWRT ON
*
         LDA   (BMPSTART),Y     ; LOAD SECOND BYTE
         STA   SCRATCH1         ; STASH IT IN SCRATCH1
         TYA                    ; DIVIDE X BY 2 (ODD BIT GETS STORED IN CARRY)
         LSR
         TAY
         LDA   SCRATCH1         ; GET SECOND BYTE BACK FROM SCRATCH1
         STA   (GFXPTR),Y       ; STORE IT IN MAIN MEMORY
         TYA                    ; MULTIPLY X BY 2
         ROL
         TAY
         INY
*
         STA   $C004            ; RAMWRT OFF (BANK SWITCH)
*
         LDA   BMPSTART+1       ; CHECK IF WE'VE REACHED EOF
         CPY   BMPSIZE          ; COMPARE LOW BYTES
         BNE   GFXCONT          ; IF LOW BYTES DON'T MATCH, CONTINUE
         CMP   BMPSIZE+1        ; COMPARE HIGH BYTES
         BEQ   LDGFX5           ; IF YES, MOVE ON TO DISPLAY IMAGE
GFXCONT  CPY   #$FE             ; STILL <= $FF?
         BCC   LDGFX4           ; YES, LOOP AGAIN
         LDX   #00              ; NOPE, TIME TO RESET
         CLC
         LDA   BMPSTART+1       ; INCREMENT BMPSTART BY $0100
         ADC   #$01
         STA   BMPSTART+1
         LDA   BMPSTART
         ADC   #$00
         STA   BMPSTART
         CLC
         LDA   GFXPTR           ; INCREMENT GFXBASE BY $80 (HALF $0100)
         ADC   #$80
         STA   GFXPTR
         LDA   GFXPTR+1
         ADC   #$00
         STA   GFXPTR+1
         JMP   LDGFX4
LDGFX5   LDA   $C057
         LDA   $C050
         LDA   $C05E
         LDA   $C053
         STA   $C00D
         LDA   #$00
         STA   $C000
         LDA   $C055
         RTS
*
********************************
* DISABLE /RAM VOLUME TO FREE  *
* AUX MEMORY FOR USE           *
********************************

REMOVE   LDA   $BF98
         AND   #$30
         CMP   #$30
         BNE   NORAM
         LDA   $BF26
         CMP   $BF16
         BNE   GOTRAM
         LDA   $BF27
         CMP   $BF17
         BNE   GOTRAM
NORAM    SEC
OKXIT    RTS
GOTRAM   LDA   $BF26
         STA   OLDVEC
         LDA   $BF27
         STA   OLDVEC+1
         LDA   $BF16
         STA   $BF26
         LDA   $BF17
         STA   $BF27
         LDX   $BF31
DEVLP    LDA   $BF32,X
         AND   #$70
         CMP   #$30
         BEQ   GOTSLT
         DEX
         BPL   DEVLP
         BMI   NORAM
GOTSLT   LDA   $BF32+1,X
         STA   $BF32,X
         INX
         CPX   $BF31
         BCS   FINSLT
         JMP   GOTSLT
FINSLT   DEC   $BF31
         LDA   #$00
         STA   $BF32,X
         CLC
         BCC   OKXIT
OLDVEC   DW    0


********************************
* PARAMS TABLE                 *
********************************

PARAMS   DFB   3
         DW    FILENAME
         DW    $8200
         DW    $AAAA
*
FILENAME DFB   ENDNAME-NAME
NAME     ASC   "/EXAMPLES/MAP.BMP"
ENDNAME  EQU   *
